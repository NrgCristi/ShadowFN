<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>